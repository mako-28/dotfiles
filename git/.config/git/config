[init]
  defaultBranch = main
[core]
  sharedRepository = group
  pager = "less -r"
  fsmonitor = false
  ignorecase = false
[commit]
  verbose = true
[alias]
  b  = branch
  d  = diff
  l  = log --oneline
  s  = status
  co = checkout
  sw = switch
  save = !git add -A && git commit --no-verify  -m'SAVEPOINT'
  wip = !git add -u && git commit -m "WIP"
  undo = reset HEAD~1 --mixed
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  n  = number --column
  na  = number add
  refresh = !git fetch origin && git remote prune origin
  p  = pull
  pm = pull --rebase
  push = push --force-with-lease --force-if-includes
  prdiff = !sh -c 'git diff -r ${1:-master}...' -
  # デフォルトブランチ(origin/HEAD)を基点に新ブランチを作成
  new = "!f() { \
    base=$(git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@'); \
    git fetch origin && git switch -c \"$1\" origin/$base; \
  }; f"
  # 現在のブランチを最新のデフォルトブランチ(origin/HEAD)にリベース
  up = "!f() { \
    base=$(git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@'); \
    git fetch origin && git rebase origin/$base; \
  }; f"
[ghq]
  root = ~/src
[push]
  default = simple
[diff]
  algorithm = histogram
  colorMoved = plain
  mnemonicPrefix = true
  renames = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[rerere]
  enabled = true
  autoupdate = true
[pull]
  ff = only
[push]
  default = simple
  autoSetupRemote = true
  followTags = true
[merge]
  conflictstyle = zdiff3
  tool = code
[mergetool "code"]
  cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[transfer]
  fsckobjects = true
[fetch]
  fsckobjects = true
[receive]
  fsckobjects = true
[rebase]
  autostash = true
  autosquash = true
  updateRefs = true
[column]
  # ブランチ一覧などを複数列表示
  ui = auto
[branch]
  sort = "-committerdate"
[tag]
  sort = version:refname

# 個別config
[include]
  path = ~/.config/local/git/config
